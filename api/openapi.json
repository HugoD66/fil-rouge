{
  "openapi": "3.0.0",
  "paths": {
    "/person": {
      "get": {
        "operationId": "PersonController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Person"
        ]
      }
    },
    "/person/{id}": {
      "get": {
        "operationId": "PersonController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Person"
        ]
      },
      "patch": {
        "operationId": "PersonController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Person"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Person"
        ]
      },
      "delete": {
        "operationId": "PersonController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Person"
        ]
      }
    },
    "/security/register": {
      "post": {
        "operationId": "SecurityController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Security"
        ]
      }
    },
    "/security/login": {
      "post": {
        "operationId": "SecurityController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Security"
        ]
      }
    }
  },
  "info": {
    "title": "Fil-rouge API",
    "description": "Schéma OpenAPI pour génération des types front",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0000-0000-0000-0001"
          },
          "firstName": {
            "type": "string",
            "example": "Pierre"
          },
          "lastName": {
            "type": "string",
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "example": "example@email.com"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T12:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T12:00:00Z"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdatePersonDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Pierre"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "example@email.com"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T12:00:00Z"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "updatedAt"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Pierre"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "example@email.com"
          },
          "password": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "example@email.com"
          },
          "password": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    }
  }
}
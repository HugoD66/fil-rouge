{
  "openapi": "3.0.0",
  "paths": {
    "/user": {
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/security/register": {
      "post": {
        "operationId": "SecurityController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Security"
        ]
      }
    },
    "/security/login": {
      "post": {
        "operationId": "SecurityController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Security"
        ]
      }
    }
  },
  "info": {
    "title": "Fil-rouge API",
    "description": "Schéma OpenAPI pour génération des types front",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Pierre"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "example@email.com"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Pierre"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "example@email.com"
          },
          "password": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "example@email.com"
          },
          "password": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    }
  }
}
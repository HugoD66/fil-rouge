#!/usr/bin/env bash
set -euo pipefail

# Toujours exécuter depuis la racine du repo
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
cd "$REPO_ROOT"

# Astuces d'affichage
clear
echo "Monorepo CLI"
echo "============"
echo

TMPDIR="$(mktemp -d -t monorepo-lint-XXXX)"
trap 'rm -rf "$TMPDIR"' EXIT

while true; do
  echo "Sélection du projet:"
  PS3="Projet \\#> "
  target=""
  select opt in "front" "api" "lint" "Quitter"; do
    case "$opt" in
      "front") target="front"; break ;;
      "api") target="api"; break ;;
      "lint") target="lint"; break ;;
      "Quitter") exit 0 ;;
      *) echo "Choix invalide." ;;
    esac
  done

  while true; do
    echo
    echo "Actions pour '$target':"
    PS3="Action \\#> "

    if [[ "$target" == "lint" ]]; then
      select action in "lint & fix (api + front)" "Retour" "Quitter"; do
        case "$action" in
          "lint & fix (api + front)")
            echo
            echo "Exécution du lint + fix sur les workspaces 'api' et 'front'..."
            echo "------------------------------------------------------------"

            api_status=0
            front_status=0

            api_log="$TMPDIR/api-lint.log"
            front_log="$TMPDIR/front-lint.log"

            echo
            echo "=> api: npm run lint --workspace=api -- --fix (logs: $api_log)"
            if ! npm run lint --workspace=api -- --fix >"$api_log" 2>&1; then
              api_status=$?
              echo "Lint api échoué (status $api_status) — voir $api_log"
            else
              echo "Lint api OK — voir $api_log"
            fi

            echo
            echo "----- Erreurs / Warnings (api) -----"
            if grep -i -E 'error|warning' "$api_log" >/dev/null 2>&1; then
              # affiche les lignes correspondantes avec numéros
              grep -n -i -E 'error|warning' "$api_log" || true
            else
              echo "(Aucun 'error' ou 'warning' trouvé dans le log de api.)"
            fi
            echo "-------------------------------------"

            echo
            echo "=> front: npm run lint --workspace=front -- --fix (logs: $front_log)"
            if ! npm run lint --workspace=front -- --fix >"$front_log" 2>&1; then
              front_status=$?
              echo "Lint front échoué (status $front_status) — voir $front_log"
            else
              echo "Lint front OK — voir $front_log"
            fi

            echo
            echo "----- Erreurs / Warnings (front) -----"
            if grep -i -E 'error|warning' "$front_log" >/dev/null 2>&1; then
              grep -n -i -E 'error|warning' "$front_log" || true
            else
              echo "(Aucun 'error' ou 'warning' trouvé dans le log de front.)"
            fi
            echo "---------------------------------------"

            if [ "$api_status" -ne 0 ] || [ "$front_status" -ne 0 ]; then
              echo
              echo "Résumé des statuts : api=$api_status front=$front_status"
              echo "Les logs complets se trouvent dans :"
              echo "  $api_log"
              echo "  $front_log"
              echo
              echo "Appuie sur Entrée pour retourner au menu..."
              read -r
              break
            fi

            echo
            echo "Lint & fix terminé pour api + front. Appuie sur Entrée pour retourner au menu..."
            read -r
            break
            ;;
          "Retour") break 2 ;;
          "Quitter") exit 0 ;;
          *) echo "Choix invalide." ;;
        esac
      done
    else
      select action in "up (lancer le serveur)" "Retour" "Quitter"; do
        case "$action" in
          "up (lancer le serveur)")
            echo
            echo "Démarrage du serveur '$target'..."
            echo "---------------------------------"
            npm run start --workspace="$target"
            echo
            echo "Processus terminé pour '$target'."
            ;;
          "Retour") break 2 ;;
          "Quitter") exit 0 ;;
          *) echo "Choix invalide." ;;
        esac
      done
    fi
  done
done

